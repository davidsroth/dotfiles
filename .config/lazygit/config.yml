# yaml-language-server: $schema=https://raw.githubusercontent.com/jesseduffield/lazygit/master/schema/config.json
# ============================================================================
# Lazygit Configuration - Modern Setup (2024/2025)
# ============================================================================
# This configuration follows current best practices for performance,
# usability, and modern Git workflows.
# ============================================================================

# Skip "Press enter to return to lazygit" prompt
promptToReturnFromSubprocess: false
customCommands:
  # ============================================================================
  # Branch Operations
  # ============================================================================
  - key: "F"
    command: "git fetch --prune"
    context: "localBranches"
    output: log
    description: "Fetch and prune branches"
  # Open commit in browser (system default)
  - key: "<c-o>"
    # ============================================================================
    # GitHub Integration
    # ============================================================================

    context: "commits"
    command: "open $(git remote get-url origin | sed 's/\\.git$//' | sed 's/git@github.com:/https:\\/\\/github.com\\//')/commit/{{.SelectedLocalCommit.Hash}}"
    description: "Open commit in GitHub"
  # Open GitHub Dashboard
  - key: "D"
    context: "global"
    command: "gh dash"
    description: "Open GitHub Dashboard"
    output: terminal
  # Toggle file staging with 'a'
  - key: "a"
    # ============================================================================
    # File Operations
    # ============================================================================

    context: "files"
    command: "git {{if .SelectedFile.HasUnstagedChanges}} add {{else}} reset {{end}} {{.SelectedFile.Name | quote}}"
    description: "Toggle file staged"
  # Show file history
  - key: "H"
    context: "files"
    command: "lazygit log --follow -- {{.SelectedFile.Name}}"
    description: "Show file history"
    output: terminal
  # Show file in HEAD
  - key: "W"
    context: "files"
    command: "git show HEAD:{{.SelectedFile.Name}}"
    description: "Show file in HEAD"
    output: terminal
  # Open file in default editor (EDITOR)
  - key: "e"
    context: "files"
    command: "${EDITOR:-nvim} {{.SelectedFile.Name}}"
    description: "Edit in $EDITOR"
    output: terminal
  # Open file in visual editor (VISUAL)
  - key: "E"
    context: "files"
    command: "${VISUAL:-$EDITOR} {{.SelectedFile.Name}}"
    description: "Edit in $VISUAL"
    output: terminal
  # Open file in visual editor from commit files view
  - key: "E"
    context: "commitFiles"
    command: "${VISUAL:-$EDITOR} {{.SelectedCommitFile.Name}}"
    description: "Edit in $VISUAL"
    output: terminal
  # Create worktree for selected branch (opens tmux in matching subdir)
  - key: "W"
    context: "localBranches"
    command: '~/.config/shell/bin/tmux_worktree_session_for_branch "{{.SelectedLocalBranch.Name}}"'
    description: "Create worktree for branch"
    output: terminal
  # Interactive rebase from selected commit
  - key: "E"
    # ============================================================================
    # Commit Operations
    # ============================================================================

    context: "commits"
    command: "git rebase -i {{.SelectedLocalCommit.Hash}}^"
    description: "Interactive rebase from commit"
    output: terminal
  # Copy commit hash to clipboard
  - key: "y"
    context: "commits"
    command: "echo -n {{.SelectedLocalCommit.Hash}} | pbcopy"
    description: "Copy commit hash"
  # Revert commit
  - key: "R"
    context: "commits"
    command: "git revert {{.SelectedLocalCommit.Hash}}"
    description: "Revert commit"
  # Cherry-pick commit
  - key: "C"
    context: "commits"
    command: "git cherry-pick {{.SelectedLocalCommit.Hash}}"
    description: "Cherry-pick commit"
  # Show changed files in commit
  - key: "D"
    context: "commits"
    command: "git show --name-only {{.SelectedLocalCommit.Hash}}"
    description: "Show changed files"
    output: terminal
gui:
  # ============================================================================
  # UI/UX Settings
  # ============================================================================

  # If true, do not show a warning when discarding changes in the staging view.
  skipDiscardChangeWarning: true
  # Show list view headers
  showListFooter: true
  # Show random tip in command log
  showRandomTip: false
  # Show command log
  showCommandLog: true
  # Show bottom line
  showBottomLine: true
  # Show file icons in tree view
  showFileTree: true
  # Enable mouse support
  mouseEvents: true
  # Command log size
  commandLogSize: 8
  # ============================================================================
  # Modern UI Enhancements (2024/2025)
  # ============================================================================

  # Use Nerd Fonts v3 for better icon support
  nerdFontsVersion: "3"
  # Show file icons for better visual experience
  showFileIcons: true
  # ============================================================================
  # Theme Configuration (Catppuccin Mocha)
  # ============================================================================

  theme:
    lightTheme: false
    # Borders
    activeBorderColor: [ "#89b4fa", bold ]      # Blue
    inactiveBorderColor: [ "#a6adc8" ]          # Subtext0
    # Text / options
    optionsTextColor: [ "#cdd6f4" ]             # Text
    defaultFgColor: [ "#cdd6f4" ]               # Text
    # Selection / highlights
    selectedLineBgColor: [ "#313244" ]          # Surface0
    # Git-specific accents
    cherryPickedCommitFgColor: [ "#94e2d5" ]    # Teal
    cherryPickedCommitBgColor: [ "#45475a" ]    # Surface1
    markedBaseCommitFgColor: [ "#f9e2af" ]      # Yellow
    markedBaseCommitBgColor: [ "#45475a" ]      # Surface1
    unstagedChangesColor: [ "#f38ba8" ]         # Red
  # Author colors
  authorColors:
    "*": "#999999" # default color for unknown authors
os:
  edit: "${EDITOR:-nvim} {{filename}}"
  editAtLine: "${EDITOR:-nvim} +{{line}} {{filename}}"
  editAtLineAndWait: "${EDITOR:-nvim} +{{line}} {{filename}}"
  openDirInEditor: "${EDITOR:-nvim} {{dir}}"
git:
  # ============================================================================
  # Git Behavior Configuration
  # ============================================================================

  # Pull mode options: 'auto', 'merge', 'rebase', 'ff-only'
  pull:
    mode: "rebase"
  # ============================================================================
  # Performance & Auto-refresh Settings (2024/2025)
  # ============================================================================

  # Automatically fetch from remote
  autoFetch: true
  # Automatically fetch interval in seconds
  autoFetchInterval: 60
  # Periodic refresh of files and submodules
  autoRefresh: true
  # Pass --all to git fetch for all remotes
  fetchAll: true
  # Auto fast-forward local branches when possible
  autoForwardBranches: allBranches
  # ============================================================================
  # Staging & Diff Configuration
  # ============================================================================

  # Staging mode: 'all' or 'split'
  staging:
    splitDiff: "auto"
  # Show untracked files in file tree
  showUntrackedFiles: true
  # ============================================================================
  # Security & Commit Settings
  # ============================================================================

  # Commit configuration
  commit:
    signOff: true # Add signed-off-by line automatically
keybinding:
  # ============================================================================
  # Key Binding Configuration
  # ============================================================================
  universal:
    # Quick navigation (vim-like)
    scrollUpMain-alt1: "K"
    scrollDownMain-alt1: "J"
    # Additional vim-style navigation
    scrollUpMain-alt2: "<c-u>"
    scrollDownMain-alt2: "<c-d>"
    # Screen mode cycling
    nextScreenMode: "+"
    prevScreenMode: "_"
    # Improved undo/redo
    undo: "u"
    redo: "<c-r>"
  commits:
    # Easier fixup commit
    createFixupCommit: "F"
    # Advanced commit operations
    amendToCommit: "A"
    tagCommit: "T"
  branches:
    # Push with tracking
    pushTag: "P"
    # Advanced branch operations
    setUpstream: "U"
    fetchRemote: "f"
  files:
    # Stage/unstage all
    stageAll: "A"
    # Override default edit keybinding
    edit: "<disabled>"
    editFile: "<disabled>"
