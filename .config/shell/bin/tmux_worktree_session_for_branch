#!/bin/zsh

# Create/switch a tmux session for an existing branch's worktree.
# Usage: tmux_worktree_session_for_branch <branch>

branch="$1"
if [[ -z "$branch" ]]; then
  echo "Usage: tmux_worktree_session_for_branch <branch>" >&2
  exit 1
fi

# Ensure we're in a git repository
if ! git rev-parse --git-dir >/dev/null 2>&1; then
  echo "Error: Not in a git repository" >&2
  exit 1
fi

# Repo info
git_root="$(git rev-parse --show-toplevel)"
repo_name="$(basename "$git_root")"
parent_dir="$(dirname "$git_root")"
worktree_dir="$parent_dir/${repo_name}-${branch//\//-}"

# Try to create the worktree (branch already exists)
if ! wt_out=$(git worktree add "$worktree_dir" "$branch" 2>&1); then
  if printf "%s" "$wt_out" | grep -qiE "already exists|worktree .* is already registered|Another worktree is already|file exists"; then
    : # proceed if it already exists
  else
    printf "Error: Failed to create worktree\n%s\n" "$wt_out" >&2
    exit 1
  fi
fi

# Determine matching subdirectory for current PWD inside new worktree
rel_path="$(git rev-parse --show-prefix 2>/dev/null || true)"
rel_path="${rel_path%/}"
target_dir="$worktree_dir"
if [[ -n "$rel_path" && -d "$worktree_dir/$rel_path" ]]; then
  target_dir="$worktree_dir/$rel_path"
fi

# Create/switch tmux session
session_name="${repo_name}-${branch//\//-}"
if [[ -n "$TMUX" ]]; then
  tmux has-session -t "$session_name" 2>/dev/null || tmux new-session -d -s "$session_name" -c "$target_dir" 2>/dev/null
  tmux switch-client -t "$session_name" 2>/dev/null
else
  tmux new-session -s "$session_name" -c "$target_dir" 2>/dev/null
fi

